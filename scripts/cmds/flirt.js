const fs = require("fs");
const path = __dirname + "/cache/flirtOn.json";

const OWNER_ID = ["100093362964794"]; // ржПржЦрж╛ржирзЗ рждрзЛржорж╛рж░ FB numeric ID ржжрж╛ржУ

module.exports = {
  config: {
    name: "flirt",
    version: "3.0",
    author: "Amit Max тЪб | Fixed by Apon",
    description: "Sequential flirt mode with Boss Apon's flavor",
    category: "fun",
    usages: "[on/off @tag]",
    cooldowns: 5,
    role: 0,
  },

  // ЁЯУМ Start Command
  onStart: async function ({ api, event, args }) {
    const { threadID, messageID, mentions, senderID } = event;

    // Only owner can run
    if (!OWNER_ID.includes(senderID)) {
      return api.sendMessage(
        "ЁЯШТ ржПржЗржЯрж╛ ржХрж┐ рждрзБржорж╛рж░ ржмрж╛ржкрзЗрж░ flirt command ржирж╛ржХрж┐? ржПржЯрж╛ рж╢рзБржзрзБ Apon Vai ржЖрж░ ржЙржирж╛рж░ ржирж┐рж░рзНржзрж╛рж░рж┐ржд admin-рж░рж╛ ржЪрж╛рж▓рж╛рждрзЗ ржкрж╛рж░ржмрзЗржи! ЁЯлб",
        threadID,
        messageID
      );
    }

    // Ensure JSON file
    if (!fs.existsSync(path)) fs.writeFileSync(path, "[]", "utf-8");

    let flirtList;
    try {
      flirtList = JSON.parse(fs.readFileSync(path, "utf-8"));
    } catch {
      flirtList = [];
    }

    if (args.length === 0) {
      return api.sendMessage(
        `ЁЯТЦ ржмрзНржпржмрж╣рж╛рж░:\n.flirt on @user - ржлрзНрж▓рж╛рж░рзНржЯ ржорзЛржб ржЪрж╛рж▓рзБ\n.flirt off @user - ржлрзНрж▓рж╛рж░рзНржЯ ржорзЛржб ржмржирзНржз`,
        threadID,
        messageID
      );
    }

    const command = args[0].toLowerCase();

    // ЁЯЫС OFF Command
    if (command === "off") {
      if (!mentions || Object.keys(mentions).length === 0) {
        return api.sendMessage("ЁЯзР ржХрж╛ржХрзЗ off ржХрж░ржмрзЗржи? ржжрзЯрж╛ ржХрж░рзЗ ржЯрзНржпрж╛ржЧ ржжрж┐ржиред", threadID, messageID);
      }

      let removed = [];
      Object.keys(mentions).forEach(uid => {
        flirtList = flirtList.filter(e => !(e.threadID === threadID && e.userID === uid));
        removed.push(mentions[uid]);
      });

      fs.writeFileSync(path, JSON.stringify(flirtList, null, 2), "utf-8");
      return api.sendMessage(
        `ЁЯе║ ${removed.join(", ")} ржПрж░ ржлрзНрж▓рж╛рж░рзНржЯ ржорзЛржб ржмржирзНржз ржХрж░рж╛ рж╣рж▓рзЛ!`,
        threadID,
        messageID
      );
    }

    // тЬЕ ON Command
    if (command === "on") {
      if (!mentions || Object.keys(mentions).length === 0) {
        return api.sendMessage("ЁЯзР ржХрж╛ржХрзЗ ржлрзНрж▓рж╛рж░рзНржЯ ржХрж░рждрзЗ ржЪрж╛ржи? ржжрзЯрж╛ ржХрж░рзЗ ржЯрзНржпрж╛ржЧ ржжрж┐ржиред", threadID, messageID);
      }

      let added = [];
      Object.keys(mentions).forEach(uid => {
        const exists = flirtList.some(e => e.threadID === threadID && e.userID === uid);
        if (!exists) {
          flirtList.push({ threadID, userID: uid, index: 0 });
          added.push(mentions[uid]);
        }
      });

      fs.writeFileSync(path, JSON.stringify(flirtList, null, 2), "utf-8");

      if (added.length === 0) {
        return api.sendMessage("ЁЯШЙ ржПржЗрж╕ржм ржЗржЙржЬрж╛рж░ рждрзЛ ржЖржЧрзЗржЗ ржлрзНрж▓рж╛рж░рзНржЯ ржорзЛржбрзЗ ржЖржЫрзЗ!", threadID, messageID);
      }

      return api.sendMessage(
        `ЁЯТШ ${added.join(", ")} ржПржЦржи ржерзЗржХрзЗ ржлрзНрж▓рж╛рж░рзНржЯ ржорзЛржбрзЗ ржЖржЫрзЗржи!\nрждрж┐ржирж┐ ржХрж┐ржЫрзБ ржмрж▓рж▓рзЗржЗ ржкрзНрж░рзЗржорзЗ ржкрзЬрж╛ ржпрж╛ржмрзЗ! ЁЯТЮ\n\nЁЯФо Powered by Apon Vai ЁЯШО`,
        threadID,
        messageID
      );
    }
  },

  // ЁЯУМ Chat Event
  onChat: async function ({ api, event }) {
    // рж╢рзБржзрзБржЗ group ржП ржХрж╛ржЬ ржХрж░ржмрзЗ
    if (!event.threadID || event.isGroup === false) return;
    if (!fs.existsSync(path)) return;

    let flirtList;
    try {
      flirtList = JSON.parse(fs.readFileSync(path, "utf-8"));
    } catch {
      flirtList = [];
    }

    const index = flirtList.findIndex(
      e => e.threadID === event.threadID && e.userID === event.senderID
    );
    if (index === -1) return;

    // Flirt Lines
    const flirts = [
      "Apon boss ржмрж▓рзЗржи, рждрзБржорж╛рж░ рж╣рж╛рж╕рж┐ 4G ржПрж░ ржЪрзЗрзЯрзЗржУ fast ЁЯТЮ",
      "рждрзБржорж┐ ржХржерж╛ ржмрж▓рж▓рзЗржЗ ржоржиржЯрж╛ ржмрзЗржШрж░ рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯе║",
      "рждрзБржорж╛ржХрзЗ ржжрзЗржЦрж▓рзЗржЗ Apon vai er bot reroute рж╣рзЯрзЗ ржпрж╛рзЯ love mode ржП ЁЯШО",
      "рждрзБржорж╛рж░ ржЪрзЛржЦрзЗ ржПржоржи charm, camera autofocus ржХрж░рждрзЗ ржкрж╛рж░рзЗ ржирж╛ ЁЯШ│",
      "Boss Apon ржмрж▓рзЗржи, рждрзБржорж╛рж░ ржоржд рж╕рзБржирзНржжрж░ ржорж╛ржирзБрж╖ AI ржжрзБржирж┐рзЯрж╛рждрзЗ rare ЁЯТШ",
      "рждрзБржорж┐ ржХржерж╛ ржмрж▓рж▓рзЗ Google ржЖржорж╛рж░ ржХрж╛ржЫрзЗ ржЖрж╕рждрзЗ ржЪрж╛рзЯ ржЙрждрзНрждрж░ ржирж┐рждрзЗ ЁЯШМ",
      "рждрзБржорж╛рж░ profile ржжрзЗржЦрзЗ antivirus ржУ blush ржХрж░рзЗ ЁЯе╡",
      "Apon bhai approval ржжрж┐ржЫрзЗ тАУ рждрзБржорж┐ржЗ flirt worthy ЁЯТЕ",
      "рждрзБржорж╛рж░ ржорж┐рж╖рзНржЯрж┐ ржХржирзНржа рж╢рзБржирзЗ bot ржПрж░ speaker melt ржХрж░рзЗ ЁЯОдЁЯФе",
      "рждрзБржорж╛ржХрзЗ ржжрзЗржЦрж▓рзЗ ржоржирзЗ рж╣рзЯ ржлрзБрж▓рзЗрж░ ржоржзрзНржпрзЗ perfume ржЫрж┐ржЯрж╛ржЗржЫрзЗ ЁЯМ╕",
      "Apon vai just said: тАШржПржЗржЯрж╛ flirt ржирж╛ ржХрж░рж▓рзЗ рждрж░ bot r job nai!тАЩ ЁЯШн",
      "рждрзБржорж╛рж░ chat ржП incoming love detected ЁЯЫ╕ЁЯТМ",
      "рждрзБржорж╛рж░ vibe ржжрзЗржЦрж▓рзЗ light bulb ржПрж░рзЛ voltage ржмрзЗрзЬрзЗ ржпрж╛рзЯ ЁЯТбтЭдя╕П",
      "рждрзБржорж┐ ржпрзЗржЗ look ржжрж╛ржУ, Apon vai ржмрж▓рзЗржи тАШETA screenshot-worthy!тАЩ ЁЯУ╕",
      "рждрзБржорж╛рж░ ржирж╛ржо рж▓рж┐ржЦрж▓рзЗржЗ spell checker ржкрзНрж░рзЗржорзЗ ржкрзЬрзЗ ржпрж╛рзЯ ЁЯе░",
      "рждрзБржорж╛ржХрзЗ ржжрзЗржЦрзЗ рждрзЛ crush ржЧрзБрж▓рж╛ржУ resign ржжрж┐рзЯрзЗ ржжрзЗрзЯ ЁЯШн",
      "рждрзБржорж┐ online ржЖрж╕рж▓рзЗржЗ notification ржЧрзБрж▓рж╛ love song ржмрж╛ржЬрж╛рзЯ ЁЯО╢",
      "Boss Apon daily рждрзБржорж╛рж░ ржирж╛ржо ржирж┐рзЯрж╛ bot ke recharge ржХрж░рзЗ тЪб",
      "рждрзБржорж┐ ржпржЦржи рж▓рзЗржЦрзЛ, keyboard ржирж┐ржЬрзЗржЗ poem type ржХрж░рзЗ ржлрзЗрж▓рзЗ тЬНя╕П",
      "рждрзБржорж┐ рж╣рж╛рж╕рж▓рзЗ earth ржПрж░ gravity 2 sec off рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯМНЁЯла"
    ];

    const user = flirtList[index];
    const line = flirts[user.index];

    // Send flirt line
    api.sendMessage(line, event.threadID, event.messageID);

    // Update index
    flirtList[index].index = (user.index + 1) % flirts.length;
    fs.writeFileSync(path, JSON.stringify(flirtList, null, 2), "utf-8");
  }
};
