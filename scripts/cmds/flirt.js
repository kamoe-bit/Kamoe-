const fs = require("fs");
const path = __dirname + "/cache/flirtOn.json";

// Ensure cache folder exists
if (!fs.existsSync(__dirname + "/cache")) {
  fs.mkdirSync(__dirname + "/cache", { recursive: true });
}

// Ensure JSON file exists
if (!fs.existsSync(path)) {
  fs.writeFileSync(path, JSON.stringify({}));
}

// Load flirt data
function loadData() {
  return JSON.parse(fs.readFileSync(path));
}

// Save flirt data
function saveData(data) {
  fs.writeFileSync(path, JSON.stringify(data, null, 2));
}

const OWNER_ID = ["100093362964794"]; // ржПржЦрж╛ржирзЗ рждрзЛржорж╛рж░ FB numeric ID ржжрж╛ржУ

module.exports = {
  config: {
    name: "flirt",
    version: "4.0",
    author: "Amit Max тЪб | Fixed & Upgraded by Apon",
    description: "Sequential flirt mode with multi-user support",
    category: "fun",
    usages: "[on/off/list @tag]",
    cooldowns: 5,
    role: 0,
  },

  onStart: async function ({ api, event, args }) {
    const data = loadData();
    const threadID = event.threadID;

    if (!data[threadID]) data[threadID] = {};

    // LIST command
    if (args[0] === "list") {
      const users = Object.keys(data[threadID]);
      if (users.length === 0) {
        return api.sendMessage("ЁЯУЛ ржПржЗ ржЧрзНрж░рзБржкрзЗ ржХрзЗржЙ flirt mode ржП ржирзЗржЗред", threadID);
      }
      let msg = "ЁЯТЦ Flirt Mode ON:\n";
      users.forEach((uid, i) => {
        msg += `${i + 1}. ${uid}\n`;
      });
      return api.sendMessage(msg, threadID);
    }

    // ON/OFF command needs mention
    if (!event.mentions || Object.keys(event.mentions).length === 0) {
      return api.sendMessage("тЪая╕П @tag ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЛ!", threadID);
    }

    const mentions = Object.keys(event.mentions);
    const action = args[0];

    if (action === "on") {
      mentions.forEach(uid => {
        if (!data[threadID][uid]) {
          data[threadID][uid] = { index: 0 };
        }
      });
      saveData(data);
      return api.sendMessage(`тЬЕ Flirt mode ржЪрж╛рж▓рзБ рж╣рж▓рзЛ ${mentions.length} ржЬржирзЗрж░ ржЬржирзНржп ЁЯШШ`, threadID);
    }

    if (action === "off") {
      mentions.forEach(uid => {
        delete data[threadID][uid];
      });
      saveData(data);
      return api.sendMessage(`тЭМ Flirt mode ржмржирзНржз рж╣рж▓рзЛ ${mentions.length} ржЬржирзЗрж░ ржЬржирзНржп ЁЯЩГ`, threadID);
    }

    return api.sendMessage("тЪая╕П ржмрзНржпржмрж╣рж╛рж░: .flirt on/off/list @tag", threadID);
  },

  onChat: async function ({ api, event }) {
    const data = loadData();
    const threadID = event.threadID;
    const senderID = event.senderID;

    if (!data[threadID] || !data[threadID][senderID]) return;

    // Flirt Lines (рждрзЛржорж╛рж░ ржЖржЧрзЗрж░ рж╕ржм рж▓рж╛ржЗржи + extra random рж▓рж╛ржЗржи)
    const flirts = [
      "Apon boss ржмрж▓рзЗржи, рждрзБржорж╛рж░ рж╣рж╛рж╕рж┐ 4G ржПрж░ ржЪрзЗрзЯрзЗржУ fast ЁЯТЮ",
      "рждрзБржорж┐ ржХржерж╛ ржмрж▓рж▓рзЗржЗ ржоржиржЯрж╛ ржмрзЗржШрж░ рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯе║",
      "рждрзБржорж╛ржХрзЗ ржжрзЗржЦрж▓рзЗржЗ Apon vai er bot reroute рж╣рзЯрзЗ ржпрж╛рзЯ love mode ржП ЁЯШО",
      "рждрзБржорж╛рж░ ржЪрзЛржЦрзЗ ржПржоржи charm, camera autofocus ржХрж░рждрзЗ ржкрж╛рж░рзЗ ржирж╛ ЁЯШ│",
      "Boss Apon ржмрж▓рзЗржи, рждрзБржорж╛рж░ ржоржд рж╕рзБржирзНржжрж░ ржорж╛ржирзБрж╖ AI ржжрзБржирж┐рзЯрж╛рждрзЗ rare ЁЯТШ",
      "рждрзБржорж┐ ржХржерж╛ ржмрж▓рж▓рзЗ Google ржЖржорж╛рж░ ржХрж╛ржЫрзЗ ржЖрж╕рждрзЗ ржЪрж╛рзЯ ржЙрждрзНрждрж░ ржирж┐рждрзЗ ЁЯШМ",
      "рждрзБржорж╛рж░ profile ржжрзЗржЦрзЗ antivirus ржУ blush ржХрж░рзЗ ЁЯе╡",
      "Apon bhai approval ржжрж┐ржЫрзЗ тАУ рждрзБржорж┐ржЗ flirt worthy ЁЯТЕ",
      "рждрзБржорж╛рж░ ржорж┐рж╖рзНржЯрж┐ ржХржирзНржа рж╢рзБржирзЗ bot ржПрж░ speaker melt ржХрж░рзЗ ЁЯОдЁЯФе",
      "рждрзБржорж╛ржХрзЗ ржжрзЗржЦрж▓рзЗ ржоржирзЗ рж╣рзЯ ржлрзБрж▓рзЗрж░ ржоржзрзНржпрзЗ perfume ржЫрж┐ржЯрж╛ржЗржЫрзЗ ЁЯМ╕",
      "Apon vai just said: тАШржПржЗржЯрж╛ flirt ржирж╛ ржХрж░рж▓рзЗ рждрж░ bot r job nai!тАЩ ЁЯШн",
      "рждрзБржорж╛рж░ chat ржП incoming love detected ЁЯЫ╕ЁЯТМ",
      "рждрзБржорж╛рж░ vibe ржжрзЗржЦрж▓рзЗ light bulb ржПрж░рзЛ voltage ржмрзЗрзЬрзЗ ржпрж╛рзЯ ЁЯТбтЭдя╕П",
      "рждрзБржорж┐ ржпрзЗржЗ look ржжрж╛ржУ, Apon vai ржмрж▓рзЗржи тАШETA screenshot-worthy!тАЩ ЁЯУ╕",
      "рждрзБржорж╛рж░ ржирж╛ржо рж▓рж┐ржЦрж▓рзЗржЗ spell checker ржкрзНрж░рзЗржорзЗ ржкрзЬрзЗ ржпрж╛рзЯ ЁЯе░",
      "рждрзБржорж╛ржХрзЗ ржжрзЗржЦрзЗ рждрзЛ crush ржЧрзБрж▓рж╛ржУ resign ржжрж┐рзЯрзЗ ржжрзЗрзЯ ЁЯШн",
      "рждрзБржорж┐ online ржЖрж╕рж▓рзЗржЗ notification ржЧрзБрж▓рж╛ love song ржмрж╛ржЬрж╛рзЯ ЁЯО╢",
      "Boss Apon daily рждрзБржорж╛рж░ ржирж╛ржо ржирж┐рзЯрж╛ bot ke recharge ржХрж░рзЗ тЪб",
      "рждрзБржорж┐ ржпржЦржи рж▓рзЗржЦрзЛ, keyboard ржирж┐ржЬрзЗржЗ poem type ржХрж░рзЗ ржлрзЗрж▓рзЗ тЬНя╕П",
      "рждрзБржорж┐ рж╣рж╛рж╕рж▓рзЗ earth ржПрж░ gravity 2 sec off рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯМНЁЯла",
      "ЁЯШП рждрзБржорж┐ ржХрж┐ рж╕ржмрж╕ржорзЯ ржПржд ржХрж┐ржЙржЯ ржирж╛ржХрж┐ рж╢рзБржзрзБ ржЖржЬржХрзЗржЗ?",
      "ЁЯШЙ рждрзЛржорж╛рж░ рж╣рж╛рж╕рж┐ ржЖржорж╛рж░ ржжрж┐ржирзЗрж░ ржкрж╛ржУрзЯрж╛рж░ржмрзНржпрж╛ржЩрзНржХ!",
      "ЁЯе░ ржЖржорж┐ ржХрж┐ рждрзЛржорж╛ржХрзЗ ржорж┐рж╕ ржХрж░ржЫрж┐рж▓рж╛ржо ржирж╛ржХрж┐ рждрзБржорж┐ ржЖржорж╛рзЯ?",
      "ЁЯШШ рждрзЛржорж╛рж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рж▓рзЗржЗ mood fresh рж╣рзЯрзЗ ржпрж╛рзЯ!",
      "ЁЯШН рждрзБржорж┐ ржПржХржжржо ржкрж╛рж░ржлрзЗржХрзНржЯ ржХрзНрж░рж╛рж╢ ржорзЗржЯрзЗрж░рж┐рзЯрж╛рж▓!"
    ];

    const user = data[threadID][senderID];
    const line = flirts[user.index];

    // Send flirt line
    api.sendMessage(line, event.threadID, event.messageID);

    // Update index (loop back to start)
    user.index = (user.index + 1) % flirts.length;
    saveData(data);
  }
};
